

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MyCoop.Data
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class CoopEntities : DbContext
{
    public CoopEntities()
        : base("name=CoopEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AttributeBusinessProcess> AttributeBusinessProcesses { get; set; }

    public virtual DbSet<AttributeType> AttributeTypes { get; set; }

    public virtual DbSet<BusinessProcessAttribute> BusinessProcessAttributes { get; set; }

    public virtual DbSet<BusinessProcess> BusinessProcesses { get; set; }

    public virtual DbSet<Component> Components { get; set; }

    public virtual DbSet<DocumentTemplate> DocumentTemplates { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<IncidentOrgUnit> IncidentOrgUnits { get; set; }

    public virtual DbSet<Incident> Incidents { get; set; }

    public virtual DbSet<IncidentUser> IncidentUsers { get; set; }

    public virtual DbSet<OrgUnitGroupPermission> OrgUnitGroupPermissions { get; set; }

    public virtual DbSet<OrgUnit> OrgUnits { get; set; }

    public virtual DbSet<OrgUnitUserPermission> OrgUnitUserPermissions { get; set; }

    public virtual DbSet<PermissionLevel> PermissionLevels { get; set; }

    public virtual DbSet<SysEvent> SysEvents { get; set; }

    public virtual DbSet<UserGroup> UserGroups { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<WorkspaceDocumentTemplate> WorkspaceDocumentTemplates { get; set; }

    public virtual DbSet<WorkspaceTemplateComponent> WorkspaceTemplateComponents { get; set; }

    public virtual DbSet<WorkspaceTemplate> WorkspaceTemplates { get; set; }


    public virtual int DeleteComponent(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComponent", idParameter);
    }


    public virtual int DeleteGroup(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGroup", idParameter);
    }


    public virtual int DeleteUser(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idParameter);
    }


    public virtual int DeleteWorkspaceTemplate(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWorkspaceTemplate", idParameter);
    }


    public virtual int DeleteDocumentTemplate(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDocumentTemplate", idParameter);
    }

}

}

